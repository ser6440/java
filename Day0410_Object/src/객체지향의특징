<객체지향의 특징>
캡슐화: 객체의 내부 정보를 보호 및 기능과 상태를 하나로 묶어주는 개념
>> getter(접근자), setter(설정자)가 필요하다. //변수나 메서드에 접근제한을 한다.
   getter(접근자), setter(설정자)의 역할: 변수에 접근을 제한한다.
   
추상화: 공통되는 개념을 뽑아내서 기능이나 내용의 상세한 부분은 작성하지 않고
	    정의만 내려서, 기능과 내용을 확장가능하게 하는 개념
	      
상 속 : 공통 기능을 가지지만 다른 추가적인 작업을 필요로 할때 상속을 받아서 
	   부모의 기능을 그대로 사용하면서 기능을 추가해서 코드의 재사용성을 높일 수 있다.
	   
다형성: 하나의 이름으로 다양한 작업을 할 수 있게 만드는 개념
            예)
	   공무원: 소방관          경찰관              행정관
                       불을끈다. 도둑을 잡는다. 시민을 돕는다.
            공무원 일하세요:	공무원일하라는 하나의 이름으로 각각 공무원들은 각자의 일(작업)을한다.
               
private: 클래스 외부에서 사용하지 못하도록 변수에 접근 제한을 설정
public: 클래스 외부에서도 변수에 접근할 수 있도록 접근 제한을 설정

getter 메서드
get필드명(): 해당 필드를 반환
ex) color의 getter: getColor() ->color를 반환하는 역할을 한다.
setter 메서드
set필드명(): 해당 필드에 값을 저장
ex) color의 setter: setColor(String c)

getter/setter를 사용하는 이유
1. 외부에서 변수에 함부로 접근해서 변경하는것을 막기위해
2. 세분화된 접근제어 가능:(읽기전용/쓰기전용/읽기쓰기허용/둘다안됨)
3. 입력값에 대한 검증이 가능(maxSpeed, minSpeed)

this <<< 클래스 내부에서도 객체를 지칭하는 키워드

Point 객체를 멤버변수로 가지는 클래스 만들어보기

Circle클래스만들기
//중심점(Point)center, 반지름radius의 상태값을 가진다.
getter/setter만들고
생성자(기본생성자/ 반지름, 중심점을 매개변수로 받는 생성자)
toString()
메서드는 넓이(3.14*radius*radius)를 반환하는 메서드, 
둘레(2*3.14*radius)를 반환하는 메서드
 