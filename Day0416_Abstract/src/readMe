Abstract(추상화)
핵심적인 개념 또는 기능을 간추려 내는 것을 말한다.

추상화의 특징
상세기능을 정의하지 않고 이름만 정의한다.

추상메서드: 메서드의 몸체가 없이 선언만 되어 있는 메서드, 미완성의 메서드 
(abstract method)

추상메서드를 하나라도 포함하고 있는 클래스는 추상클래스 이어야 한다.
추상클래스는 객체를 만들 수 없다.

		/*추상클래스(abstract class)는 객체를 만들 수 없다.*/
		//Shape s = new Shape();
		//추상클래스는 상속을 해서 사용하기 위해서 만든다.
		
		//추상클래스(부모클래스)를 상속받은 클래스(자식클래스)는
		//1. 부모클래스가 가지는 추상메서드를 구현(몸통을 만들어 내는 것)하거나,
		//2. 자기 자신도 추상 클래스가 되어야 한다.
		
		//결론적으로는 추상클래스의 객체를 생성하기 위해서는 상속을
		//통해서 추상메서드의 몸체를 구현해야 한다.
		
추상클래스의 효과: 자식 클래스가 가져야할 기능에 대해서 선언하는 것과 같다.
            : 자식클래스가 추상메서드를 구현해야만 하기 때문에 프로그램의 성능의 일관성을 유지할 수 있다.
            
Interface: 결합부의 역할을 한다.
추상메서드만으로 이루어져 있음
인터페이스 내부에서는 abstract 키워드 생략가능
추상메서드가 아닌 다른 메서드 작성 안됨
객체 생성이 안됨, 타입으로는 사용가능

		//Drawable interface 작성: void draw()
		//Drawable을 구현하는 Rectangle, Triangle, Circle 작성하기
		//DrawableTest에서는 Rectangle, Triangle, Circle객체 만들어서
		//Drawable 배열에 참조시키고, 반복문에 draw()실행하기       
		
Interface상속 >> implements		     