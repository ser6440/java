Generic
:다양한 종류의 데이터를 하나의 코드로 처리하기 위함
:코드의 재사용성을 높이는 방법

기존에는 Object 변수에 여러 변수를 참조시켜서 사용
:다양한 기능을 가지지는 못함, 다양한 데이터가 가지는 연산이 모두 다르기 때문에 구현하지 못함 
대신에 다양한 데이터를 저장하는 용도로 사용

Store 클래스
: 다양한 종류의 데이터를 저장하고, 반환할 수 있는 클래스
Object 변수를 멤버로 가진다: 모든 데이터를 참조하기 위해서

제네릭: Object로 다양한 데이터를 저장하기에는 무리가 있기 때문에 사용
클래스이름<알파벳>, 알파벳을 아무거나 사용가능 
보통은 대문자 알파벳 사용
T(type), V(value), K(key), E(element)
생긴모양
public class Store<T>{
	//클래스 안에서는 T를 하나의 타입으로 생각하고 사용하면 됨
}

컬렉션(Collection): 자료구조를 구현해 놓은 클래스, 인터페이스
List, Set, Map, Stack, Queue: 인터페이스
(메서드가 선언만 되어 있는 것)
List: ArrayList(데이터의 변경이 적고 조회할 일이 많을 때 사용), LinkedList(데이터의 변경이 많고 조회할일이 적을때)
Set: HashSet
Map: HashMap




제네릭이란
이름,숫자,학생정보,점수정보 등을 한꺼번에 처리하기 위해서사용

자료구조: 데이터를 저장하는 형태 Set(집합: 중복이 없는 데이터의 모음),List(순서가 있는 데이터의 나열),Stack(선입후출),Queue(선입선출),배열,Map,Tree등등등
자료구조를 구현해 놓은 클래스: 컬렉션

