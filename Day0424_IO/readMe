입출력, IO(input/output)
내 프로그램이  외부와 데이터를 주고 받는 것

데이터를 입출력 할 때는 '스트림(Stream)'을 이용한다.

스트림 Stream(개천,내): 데이터의 흐름, 단 방향
입력받을 때는 input Stream을 이용
데이터를 내보낼 때는 output Stream을 이용

Stream의 종류: (목적에 의한 분류)
1. 소스에 직접 데이터를 쓰거나, 읽어오는 Stream: 데이터 싱크 Stream
2. Stream을 읽거나 쓰기 편하게 바꿔주는 Stream: 데이터 처리 Stream

Stream의 종류: (처리 단위에 의한 분류)
1. 바이트 스트림: 바이트 단위로 데이터를 처리
2. 문자 스트림: 문자 단위로 데이터를 처리

serializable(직렬화): 객체를 전송가능한 형태로 변경하는 것
전송하고자 하는 객체의클래스에 직렬화를 구현
implements Serializable
변수에 transient를 선언하면 해당 변수는 직렬화 대상에서 제외된다.
>>객체 저장했다가 다시 객체를 불러오면 해당 객체는 기본값이 들어가 있음(0,null,'',flase)

데이터의 소스: 입력과 출력의 목적지

학생 한명의 정보를 '이름/학년/점수' 형태로 파일에 저장하고 (파일이름 맘대로)
파일에서 정보 읽어와서 학생객체에 넣고 출력해보기, 학생정보 변경하고
파일에 다시 쓰기

1. 파일에서 데이터 읽어오기(char)
2. 읽어온 char를 문자열로 만들어내기(StringBuilder)
3. 만들어낸 문자열을 '/' 기준으로 잘라내기(StringTokenizer)
4. 잘라낸 문자열을 잘 정리해서 학생객체에 넣기
5. 학생객체 내용 출력하기
6. 학생객체 내용 바꿔서 문자열로 만들어내기
7. 문자열을 파일에 쓰기

StudentManagement 파일 입출력으로 데이터 저장하기
1. 유지시켜야 하는 데이터는 StudentList(혹은 배열, MyList, 학생 정보가 여러개 들어있는 객체)
2. List 객체에 변화가 있을 때나, 종료할 때 파일에 저장하고
3. 다시 실행할 때 파일에 저장되어 있는 List객체를 가져오면 이전에 만들었던 데이터가 유지

